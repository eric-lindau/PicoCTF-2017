;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2017 Retargetable Decompiler <info@retdec.com>
;;
;; Decompiler release: v2.2.1 (2016-09-07)
;; Decompilation date: 2017-04-01 13:33:04
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x8048294 -- 0x80482b6
0x8048294:   53                     	push ebx
0x8048295:   83 ec 08               	sub esp, 0x8
0x8048298:   e8 93 00 00 00         	call 0x8048330 <__x86.get_pc_thunk.bx>
0x804829d:   81 c3 a7 14 00 00      	add ebx, 0x14a7
0x80482a3:   8b 83 fc ff ff ff      	mov eax, dword [ ebx + 0xfffffffc ]
0x80482a9:   85 c0                  	test eax, eax
0x80482ab:   74 05                  	jz 0x80482b2 <_init+0x1e>
0x80482ad:   e8 1e 00 00 00         	call 0x80482d0 <__gmon_start>
0x80482b2:   83 c4 08               	add esp, 0x8
0x80482b5:   5b                     	pop ebx
0x80482b6:   c3                     	ret
; section: .plt
; function: function_80482c0 at 0x80482c0 -- 0x80482ff
0x80482c0:   ff 35 48 97 04 08      	push dword [ 0x8049748 ]
0x80482c6:   ff 25 4c 97 04 08      	jmp dword [ 0x804974c ]
0x80482cc:   00 00                  	add byte [ eax ], al
0x80482ce:   00 00                  	add byte [ eax ], al
0x80482d0:   ff 25 50 97 04 08      	jmp dword [ 0x8049750 ]
0x80482d6:   68 00 00 00 00         	push 0x0
0x80482db:   e9 e0 ff ff ff         	jmp 0xffffffe0
0x80482e0:   ff 25 54 97 04 08      	jmp dword [ 0x8049754 ]
0x80482e6:   68 08 00 00 00         	push 0x8
0x80482eb:   e9 d0 ff ff ff         	jmp 0xffffffd0
0x80482f0:   ff 25 58 97 04 08      	jmp dword [ 0x8049758 ]
0x80482f6:   68 10 00 00 00         	push 0x10
0x80482fb:   e9 c0 ff ff ff         	jmp 0xffffffc0
; section: .text
; function: _start at 0x8048300 -- 0x804832f
0x8048300:   31 ed                  	xor ebp, ebp
0x8048302:   5e                     	pop esi
0x8048303:   89 e1                  	mov ecx, esp
0x8048305:   83 e4 f0               	and esp, 0xfffffff0
0x8048308:   50                     	push eax
0x8048309:   54                     	push esp
0x804830a:   52                     	push edx
0x804830b:   68 20 85 04 08         	push 0x8048520
0x8048310:   68 b0 84 04 08         	push 0x80484b0
0x8048315:   51                     	push ecx
0x8048316:   56                     	push esi
0x8048317:   68 fb 83 04 08         	push 0x80483fb
0x804831c:   e8 bf ff ff ff         	call 0x80482e0 <__libc_start_main>
0x8048321:   f4                     	hlt
0x8048322:   66 90                  	xchg ax, ax
0x8048324:   66 90                  	xchg ax, ax
0x8048326:   66 90                  	xchg ax, ax
0x8048328:   66 90                  	xchg ax, ax
0x804832a:   66 90                  	xchg ax, ax
0x804832c:   66 90                  	xchg ax, ax
0x804832e:   66 90                  	xchg ax, ax
; function: __x86.get_pc_thunk.bx at 0x8048330 -- 0x804833f
0x8048330:   8b 1c 24               	mov ebx, dword [ esp ]
0x8048333:   c3                     	ret
0x8048334:   66 90                  	xchg ax, ax
0x8048336:   66 90                  	xchg ax, ax
0x8048338:   66 90                  	xchg ax, ax
0x804833a:   66 90                  	xchg ax, ax
0x804833c:   66 90                  	xchg ax, ax
0x804833e:   66 90                  	xchg ax, ax
; function: deregister_tm_clones at 0x8048340 -- 0x804836f
0x8048340:   b8 6b 97 04 08         	mov eax, 0x804976b
0x8048345:   2d 68 97 04 08         	sub eax, 0x8049768
0x804834a:   83 f8 06               	cmp eax, 0x6
0x804834d:   76 1a                  	jbe 0x8048369 <deregister_tm_clones+0x29>
0x804834f:   b8 00 00 00 00         	mov eax, 0x0
0x8048354:   85 c0                  	test eax, eax
0x8048356:   74 11                  	jz 0x8048369 <deregister_tm_clones+0x29>
0x8048358:   55                     	push ebp
0x8048359:   89 e5                  	mov ebp, esp
0x804835b:   83 ec 14               	sub esp, 0x14
0x804835e:   68 68 97 04 08         	push 0x8049768
0x8048363:   ff d0                  	call eax
0x8048365:   83 c4 10               	add esp, 0x10
0x8048368:   c9                     	leave
0x8048369:   f3 c3                  	rep ret
0x804836b:   90                     	nop
0x804836c:   8d 74 26 00            	lea esi, dword [ esi + 0x0 ]
; function: register_tm_clones at 0x8048370 -- 0x80483af
0x8048370:   b8 68 97 04 08         	mov eax, 0x8049768
0x8048375:   2d 68 97 04 08         	sub eax, 0x8049768
0x804837a:   c1 f8 02               	sar eax, 0x2
0x804837d:   89 c2                  	mov edx, eax
0x804837f:   c1 ea 1f               	shr edx, 0x1f
0x8048382:   01 d0                  	add eax, edx
0x8048384:   d1 f8                  	sar eax, 1
0x8048386:   74 1b                  	jz 0x80483a3 <register_tm_clones+0x33>
0x8048388:   ba 00 00 00 00         	mov edx, 0x0
0x804838d:   85 d2                  	test edx, edx
0x804838f:   74 12                  	jz 0x80483a3 <register_tm_clones+0x33>
0x8048391:   55                     	push ebp
0x8048392:   89 e5                  	mov ebp, esp
0x8048394:   83 ec 10               	sub esp, 0x10
0x8048397:   50                     	push eax
0x8048398:   68 68 97 04 08         	push 0x8049768
0x804839d:   ff d2                  	call edx
0x804839f:   83 c4 10               	add esp, 0x10
0x80483a2:   c9                     	leave
0x80483a3:   f3 c3                  	rep ret
0x80483a5:   8d 74 26 00            	lea esi, dword [ esi + 0x0 ]
0x80483a9:   8d bc 27 00 00 00 00   	lea edi, dword [ edi + 0x0 ]
; function: __do_global_dtors_aux at 0x80483b0 -- 0x80483cf
0x80483b0:   80 3d 68 97 04 08 00   	cmp byte [ 0x8049768 ], 0x0
0x80483b7:   75 13                  	jnz 0x80483cc <__do_global_dtors_aux+0x1c>
0x80483b9:   55                     	push ebp
0x80483ba:   89 e5                  	mov ebp, esp
0x80483bc:   83 ec 08               	sub esp, 0x8
0x80483bf:   e8 7c ff ff ff         	call 0x8048340 <deregister_tm_clones>
0x80483c4:   c6 05 68 97 04 08 01   	mov byte [ 0x8049768 ], 0x1
0x80483cb:   c9                     	leave
0x80483cc:   f3 c3                  	rep ret
0x80483ce:   66 90                  	xchg ax, ax
; function: frame_dummy at 0x80483d0 -- 0x80483fa
0x80483d0:   b8 54 96 04 08         	mov eax, 0x8049654
0x80483d5:   8b 10                  	mov edx, dword [ eax ]
0x80483d7:   85 d2                  	test edx, edx
0x80483d9:   75 05                  	jnz 0x80483e0 <frame_dummy+0x10>
0x80483db:   eb 93                  	jmp 0x8048370 <register_tm_clones>
0x80483dd:   8d 76 00               	lea esi, dword [ esi + 0x0 ]
0x80483e0:   ba 00 00 00 00         	mov edx, 0x0
0x80483e5:   85 d2                  	test edx, edx
0x80483e7:   74 f2                  	jz 0x80483db <frame_dummy+0xb>
0x80483e9:   55                     	push ebp
0x80483ea:   89 e5                  	mov ebp, esp
0x80483ec:   83 ec 14               	sub esp, 0x14
0x80483ef:   50                     	push eax
0x80483f0:   ff d2                  	call edx
0x80483f2:   83 c4 10               	add esp, 0x10
0x80483f5:   c9                     	leave
0x80483f6:   e9 75 ff ff ff         	jmp 0x8048370 <register_tm_clones>
; function: main at 0x80483fb -- 0x80484af
0x80483fb:   8d 4c 24 04            	lea ecx, dword [ esp + 0x4 ]
0x80483ff:   83 e4 f0               	and esp, 0xfffffff0
0x8048402:   ff 71 fc               	push dword [ ecx + 0xfffffffc ]
0x8048405:   55                     	push ebp
0x8048406:   89 e5                  	mov ebp, esp
0x8048408:   51                     	push ecx
0x8048409:   83 ec 04               	sub esp, 0x4
0x804840c:   83 ec 0c               	sub esp, 0xc
0x804840f:   6a 41                  	push 0x41
0x8048411:   e8 da fe ff ff         	call 0x80482f0 <putchar>
0x8048416:   83 c4 10               	add esp, 0x10
0x8048419:   83 ec 0c               	sub esp, 0xc
0x804841c:   6a 69                  	push 0x69
0x804841e:   e8 cd fe ff ff         	call 0x80482f0 <putchar>
0x8048423:   83 c4 10               	add esp, 0x10
0x8048426:   83 ec 0c               	sub esp, 0xc
0x8048429:   6a 6e                  	push 0x6e
0x804842b:   e8 c0 fe ff ff         	call 0x80482f0 <putchar>
0x8048430:   83 c4 10               	add esp, 0x10
0x8048433:   83 ec 0c               	sub esp, 0xc
0x8048436:   6a 27                  	push 0x27
0x8048438:   e8 b3 fe ff ff         	call 0x80482f0 <putchar>
0x804843d:   83 c4 10               	add esp, 0x10
0x8048440:   83 ec 0c               	sub esp, 0xc
0x8048443:   6a 74                  	push 0x74
0x8048445:   e8 a6 fe ff ff         	call 0x80482f0 <putchar>
0x804844a:   83 c4 10               	add esp, 0x10
0x804844d:   83 ec 0c               	sub esp, 0xc
0x8048450:   6a 20                  	push 0x20
0x8048452:   e8 99 fe ff ff         	call 0x80482f0 <putchar>
0x8048457:   83 c4 10               	add esp, 0x10
0x804845a:   83 ec 0c               	sub esp, 0xc
0x804845d:   6a 48                  	push 0x48
0x804845f:   e8 8c fe ff ff         	call 0x80482f0 <putchar>
0x8048464:   83 c4 10               	add esp, 0x10
0x8048467:   83 ec 0c               	sub esp, 0xc
0x804846a:   6a 65                  	push 0x65
0x804846c:   e8 7f fe ff ff         	call 0x80482f0 <putchar>
0x8048471:   83 c4 10               	add esp, 0x10
0x8048474:   83 ec 0c               	sub esp, 0xc
0x8048477:   6a 72                  	push 0x72
0x8048479:   e8 72 fe ff ff         	call 0x80482f0 <putchar>
0x804847e:   83 c4 10               	add esp, 0x10
0x8048481:   83 ec 0c               	sub esp, 0xc
0x8048484:   6a 65                  	push 0x65
0x8048486:   e8 65 fe ff ff         	call 0x80482f0 <putchar>
0x804848b:   83 c4 10               	add esp, 0x10
0x804848e:   83 ec 0c               	sub esp, 0xc
0x8048491:   6a 0a                  	push 0xa
0x8048493:   e8 58 fe ff ff         	call 0x80482f0 <putchar>
0x8048498:   83 c4 10               	add esp, 0x10
0x804849b:   b8 00 00 00 00         	mov eax, 0x0
0x80484a0:   8b 4d fc               	mov ecx, dword [ ebp + 0xfffffffc ]
0x80484a3:   c9                     	leave
0x80484a4:   8d 61 fc               	lea esp, dword [ ecx + 0xfffffffc ]
0x80484a7:   c3                     	ret
0x80484a8:   66 90                  	xchg ax, ax
0x80484aa:   66 90                  	xchg ax, ax
0x80484ac:   66 90                  	xchg ax, ax
0x80484ae:   66 90                  	xchg ax, ax
; function: __libc_csu_init at 0x80484b0 -- 0x8048510
0x80484b0:   55                     	push ebp
0x80484b1:   57                     	push edi
0x80484b2:   31 ff                  	xor edi, edi
0x80484b4:   56                     	push esi
0x80484b5:   53                     	push ebx
0x80484b6:   e8 75 fe ff ff         	call 0x8048330 <__x86.get_pc_thunk.bx>
0x80484bb:   81 c3 89 12 00 00      	add ebx, 0x1289
0x80484c1:   83 ec 1c               	sub esp, 0x1c
0x80484c4:   8b 6c 24 30            	mov ebp, dword [ esp + 0x30 ]
0x80484c8:   8d b3 0c ff ff ff      	lea esi, dword [ ebx + 0xffffff0c ]
0x80484ce:   e8 c1 fd ff ff         	call 0x8048294 <_init>
0x80484d3:   8d 83 08 ff ff ff      	lea eax, dword [ ebx + 0xffffff08 ]
0x80484d9:   29 c6                  	sub esi, eax
0x80484db:   c1 fe 02               	sar esi, 0x2
0x80484de:   85 f6                  	test esi, esi
0x80484e0:   74 27                  	jz 0x8048509 <__libc_csu_init+0x59>
0x80484e2:   8d b6 00 00 00 00      	lea esi, dword [ esi + 0x0 ]
0x80484e8:   8b 44 24 38            	mov eax, dword [ esp + 0x38 ]
0x80484ec:   89 2c 24               	mov dword [ esp ], ebp
0x80484ef:   89 44 24 08            	mov dword [ esp + 0x8 ], eax
0x80484f3:   8b 44 24 34            	mov eax, dword [ esp + 0x34 ]
0x80484f7:   89 44 24 04            	mov dword [ esp + 0x4 ], eax
0x80484fb:   ff 94 bb 08 ff ff ff   	call dword [ ebx + edi * 0x2 + 0xffffff08 ]
0x8048502:   83 c7 01               	add edi, 0x1
0x8048505:   39 f7                  	cmp edi, esi
0x8048507:   75 df                  	jnz 0x80484e8 <__libc_csu_init+0x38>
0x8048509:   83 c4 1c               	add esp, 0x1c
0x804850c:   5b                     	pop ebx
0x804850d:   5e                     	pop esi
0x804850e:   5f                     	pop edi
0x804850f:   5d                     	pop ebp
0x8048510:   c3                     	ret
; function: function_8048511 at 0x8048511 -- 0x804851f
0x8048511:   eb 0d                  	jmp 0x8048520 <__libc_csu_fini>
0x8048513:   90                     	nop
0x8048514:   90                     	nop
0x8048515:   90                     	nop
0x8048516:   90                     	nop
0x8048517:   90                     	nop
0x8048518:   90                     	nop
0x8048519:   90                     	nop
0x804851a:   90                     	nop
0x804851b:   90                     	nop
0x804851c:   90                     	nop
0x804851d:   90                     	nop
0x804851e:   90                     	nop
0x804851f:   90                     	nop
; function: __libc_csu_fini at 0x8048520 -- 0x8048521
0x8048520:   f3 c3                  	rep ret
; section: .fini
; function: _fini at 0x8048524 -- 0x8048537
0x8048524:   53                     	push ebx
0x8048525:   83 ec 08               	sub esp, 0x8
0x8048528:   e8 03 fe ff ff         	call 0x8048330 <__x86.get_pc_thunk.bx>
0x804852d:   81 c3 17 12 00 00      	add ebx, 0x1217
0x8048533:   83 c4 08               	add esp, 0x8
0x8048536:   5b                     	pop ebx
0x8048537:   c3                     	ret

;;
;; Data Segment
;;

; section: .interp
0x8048134:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048144:   2e 32 00                                           |.2.             |
; section: .gnu.hash
0x804818c:   02 00 00 00 04 00 00 00  01 00 00 00 05 00 00 00   |................|
0x804819c:   00 20 00 20 00 00 00 00  04 00 00 00 ad 4b e3 c0   |. . .........K..|
; section: .dynsym
0x80481ac:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481bc:   34 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |4........... ...|
0x80481cc:   22 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |"...............|
0x80481dc:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481ec:   0b 00 00 00 3c 85 04 08  04 00 00 00 11 00 0f 00   |....<...........|
; section: .dynstr
0x80481fc:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804820c:   74 64 69 6e 5f 75 73 65  64 00 70 75 74 63 68 61   |tdin_used.putcha|
0x804821c:   72 00 5f 5f 6c 69 62 63  5f 73 74 61 72 74 5f 6d   |r.__libc_start_m|
0x804822c:   61 69 6e 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |ain.__gmon_start|
0x804823c:   5f 5f 00 47 4c 49 42 43  5f 32 2e 30 00            |__.GLIBC_2.0.   |
; section: .gnu.version
0x804824a:   00 00 00 00 02 00 02 00  01 00                     |..........      |
; section: .gnu.version_r
0x8048254:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x8048264:   10 69 69 0d 00 00 02 00  43 00 00 00 00 00 00 00   |.ii.....C.......|
; section: .rel.dyn
0x8048274:   40 97 04 08 06 01 00 00                            |@.......        |
; section: .rel.plt
0x804827c:   50 97 04 08 07 01 00 00  54 97 04 08 07 02 00 00   |P.......T.......|
0x804828c:   58 97 04 08 07 03 00 00                            |X.......        |
; section: .rodata
0x8048538:   03 00 00 00 01 00 02 00  53 75 62 00 6d 69 74 00   |........Sub.mit.|
0x8048548:   5f 6d 65 00 5f 66 6f 00  72 5f 49 00 5f 61 6d 00   |_me._fo.r_I._am.|
0x8048558:   5f 74 68 00 65 5f 66 00  6c 61 67 00               |_th.e_f.lag.    |
; section: .eh_frame_hdr
0x8048564:   01 1b 03 3b 28 00 00 00  04 00 00 00 5c fd ff ff   |...;(.......\...|
0x8048574:   44 00 00 00 97 fe ff ff  68 00 00 00 4c ff ff ff   |D.......h...L...|
0x8048584:   94 00 00 00 bc ff ff ff  d0 00 00 00               |............    |
; section: .eh_frame
0x8048590:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x80485a0:   1b 0c 04 04 88 01 00 00  20 00 00 00 1c 00 00 00   |........ .......|
0x80485b0:   10 fd ff ff 40 00 00 00  00 0e 08 46 0e 0c 4a 0f   |....@......F..J.|
0x80485c0:   0b 74 04 78 00 3f 1a 3b  2a 32 24 22 28 00 00 00   |.t.x.?.;*2$"(...|
0x80485d0:   40 00 00 00 27 fe ff ff  ad 00 00 00 00 44 0c 01   |@...'........D..|
0x80485e0:   00 47 10 05 02 75 00 43  0f 03 75 7c 06 02 9a 0c   |.G...u.C..u|....|
0x80485f0:   01 00 41 c5 43 0c 04 04  38 00 00 00 6c 00 00 00   |..A.C...8...l...|
0x8048600:   b0 fe ff ff 61 00 00 00  00 41 0e 08 85 02 41 0e   |....a....A....A.|
0x8048610:   0c 87 03 43 0e 10 86 04  41 0e 14 83 05 4e 0e 30   |...C....A....N.0|
0x8048620:   02 48 0e 14 41 c3 0e 10  41 c6 0e 0c 41 c7 0e 08   |.H..A...A...A...|
0x8048630:   41 c5 0e 04 10 00 00 00  a8 00 00 00 e4 fe ff ff   |A...............|
0x8048640:   02 00 00 00 00 00 00 00  00 00 00 00               |............    |
; section: .init_array
0x804964c:   d0 83 04 08                                        |....            |
; section: .fini_array
0x8049650:   b0 83 04 08                                        |....            |
; section: .jcr
0x8049654:   00 00 00 00                                        |....            |
; section: .dynamic
0x8049658:   01 00 00 00 01 00 00 00  0c 00 00 00 94 82 04 08   |................|
0x8049668:   0d 00 00 00 24 85 04 08  19 00 00 00 4c 96 04 08   |....$.......L...|
0x8049678:   1b 00 00 00 04 00 00 00  1a 00 00 00 50 96 04 08   |............P...|
0x8049688:   1c 00 00 00 04 00 00 00  f5 fe ff 6f 8c 81 04 08   |...........o....|
0x8049698:   05 00 00 00 fc 81 04 08  06 00 00 00 ac 81 04 08   |................|
0x80496a8:   0a 00 00 00 4d 00 00 00  0b 00 00 00 10 00 00 00   |....M...........|
0x80496b8:   15 00 00 00 00 00 00 00  03 00 00 00 44 97 04 08   |............D...|
0x80496c8:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x80496d8:   17 00 00 00 7c 82 04 08  11 00 00 00 74 82 04 08   |....|.......t...|
0x80496e8:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x80496f8:   fe ff ff 6f 54 82 04 08  ff ff ff 6f 01 00 00 00   |...oT......o....|
0x8049708:   f0 ff ff 6f 4a 82 04 08  00 00 00 00 00 00 00 00   |...oJ...........|
0x8049718:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8049728:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8049738:   00 00 00 00 00 00 00 00                            |........        |
; section: .got
0x8049740:   00 00 00 00                                        |....            |
; section: .got.plt
0x8049744:   58 96 04 08 00 00 00 00  00 00 00 00 d6 82 04 08   |X...............|
0x8049754:   e6 82 04 08 f6 82 04 08                            |........        |
; section: .data
0x804975c:   00 00 00 00 00 00 00 00  40 85 04 08               |........@...    |
